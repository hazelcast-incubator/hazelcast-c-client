| Function                                                                         | Header | Impl | Exposed | Test | Doc |
|----------------------------------------------------------------------------------+--------+------+---------+------+-----|
| bool containsKey(const K &key)                                                   | y      | y    | y       | y    | y   |
| bool containsValue(const V &value)                                               | y      | y    | y       |      |     |
| boost::shared_ptr<V> get(const K &key)                                           | y      | y    | y       | y    | y   |
| boost::shared_ptr<V> put(const K &key, const V &value)                           | y      | y    | y       |      |     |
| boost::shared_ptr<V> remove(const K &key)                                        | y      | y    | y       |      |     |
| bool remove(const K &key, const V &value)                                        | y      | y    | y       |      |     |
| void deleteEntry(const K &key)                                                   | y      | y    | y       | y    | y   |
| void flush()                                                                     | y      | y    | y       |      |     |
| bool tryRemove(const K &key, long timeoutInMillis)                               | y      | y    | y       |      |     |
| bool tryPut(const K &key, const V &value, long timeoutInMillis)                  | y      | y    | y       |      |     |
| boost::shared_ptr<V> put(const K &key, const V &value, long ttlInMillis)         | y      | y    | y       |      |     |
| void putTransient(const K &key, const V &value, long ttlInMillis)                | y      | y    | y       |      |     |
| boost::shared_ptr<V> putIfAbsent(const K &key, const V &value)                   | y      | y    | y       |      |     |
| boost::shared_ptr<V> putIfAbsent(const K &key, const V &value, long ttlInMillis) | y      | y    | y       |      |     |
| bool replace(const K &key, const V &oldValue, const V &newValue)                 | y      | y    | y       |      |     |
| boost::shared_ptr<V> replace(const K &key, const V &value)                       | y      | y    | y       |      |     |
| void lock(const K &key)                                                          | y      | y    | y       |      |     |
| void lock(const K &key, long leaseTime)                                          | y      | y    | y       |      |     |
| bool isLocked(const K &key)                                                      | y      | y    | y       |      |     |
| bool tryLock(const K &key)                                                       | y      | y    | y       |      |     |
| bool tryLock(const K &key, long timeInMillis)                                    | y      | y    | y       |      |     |
| void unlock(const K &key)                                                        | y      | y    | y       |      |     |
| void forceUnlock(const K &key)                                                   | y      | y    | y       |      |     |
| void set(const K &key, const V &value, long ttl)                                 | y      | y    | y       |      |     |
| bool evict(const K &key)                                                         | y      | y    | y       |      |     |
| void evictAll()                                                                  | y      | y    | y       |      |     |
| void addIndex(const std::string &attribute, bool ordered)                        | y      | y    | y       |      |     |
| void set(const K &key, const V &value)                                           | y      | y    | y       | y    | y   |
| int size()                                                                       | y      | y    | y       | y    | y   |
| bool isEmpty()                                                                   | y      | y    | y       |      |     |
| void clear()                                                                     | y      | y    | y       |      |     |
b
Will be skipped:

std::vector<K> keySet()
std::vector<V> values()

boost::shared_ptr<ResultType> executeOnKey(const K &key, EntryProcessor &entryProcessor)

std::string addInterceptor(MapInterceptor &interceptor)
void removeInterceptor(const std::string &id)
std::string addEntryListener(EntryListener<K, V> &listener, bool includeValue)
bool removeEntryListener(const std::string &registrationId)
EntryView<K, V> getEntryView(const K &key)

std::map<K, V> getAll(const std::set<K> &keys)
void putAll(const std::map<K, V> &entries)

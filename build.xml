<project name="Hazelcast C client" default="build" basedir=".">
    <!-- use CXX or default to clang++ for compilation -->
    <property environment="env"/>
    <condition property="compiler" value="${env.CXX}" else="clang++">
        <isset property="env.CXX" />
    </condition>

    <target name="build-external-dependencies">
        <!-- download and build Hazelcast C++ client -->
        <exec executable="git" failonerror="true" dir="lib">
            <arg line="clone --depth 1 --branch v3.6.2 https://github.com/hazelcast/hazelcast-cpp-client.git"/>
        </exec>

        <mkdir dir="lib/hazelcast-cpp-client/build"/>

        <exec executable="cmake" failonerror="true" dir="lib/hazelcast-cpp-client/build">
            <arg line=".. -DCMAKE_CXX_FLAGS_RELEASE=-fPIC -DHZ_LIB_TYPE=STATIC -DHZ_BIT=64 -DCMAKE_BUILD_TYPE=Release" />
        </exec>

        <exec executable="make" failonerror="true" dir="lib/hazelcast-cpp-client/build" />

        <!-- download and build gtest library -->
        <exec executable="git" failonerror="true" dir="lib">
            <arg line="clone --depth 1 --branch master https://github.com/google/googletest.git"/>
        </exec>

        <mkdir dir="lib/googletest/build"/>

        <exec executable="cmake" failonerror="true" dir="lib/googletest/build">
            <arg line=".." />
        </exec>

        <exec executable="make" failonerror="true" dir="lib/googletest/build" />

        <!-- download google styleguide -->
        <exec executable="git" failonerror="true" dir="lib">
            <arg line="clone --depth 1 https://github.com/google/styleguide.git"/>
        </exec>
    </target>

    <target name="build-c-client">
        <mkdir dir="build"/>

        <exec executable="cmake" failonerror="true" dir="build">
            <arg line="-DGTEST_HOME=${basedir}/lib/googletest/ -DHAZELCAST_CPP_CLIENT_LIB=HazelcastClient3.6.2_64.a -DHAZELCAST_CPP_CLIENT_HOME=${basedir}/lib/hazelcast-cpp-client/ -DCMAKE_CXX_COMPILER=${compiler} .." />
        </exec>

        <exec executable="make" failonerror="true" dir="build" />
    </target>

    <target name="build" depends="clean, build-external-dependencies, build-c-client"/>

    <!-- tests/sanity -->
    <target name="tests" depends="build-c-client">
        <exec executable="ctest" failonerror="true" dir="build">
            <arg line="--output-on-failure -D ExperimentalTest"/>
        </exec>

        <exec executable="ctest" failonerror="true" dir="build">
            <arg line="--output-on-failure -D ExperimentalMemCheck"/>
        </exec>
    </target>

    <target name="codestyle">
        <apply executable="lib/styleguide/cpplint/cpplint.py" failonerror="false" parallel="false" >
            <arg line="--extensions=hpp,cpp,h --linelength=120 --filter=-build/include_order,-runtime/int,-readability/namespace,-runtime/indentation_namespace"/>
            <srcfile/>

            <fileset id="sources" dir="${basedir}">
                <include name="include/*.h" />
                <include name="src/**/*.cpp" />
                <include name="src/**/*.hpp" />
                <include name="test/**/*.cpp" />
            </fileset>
        </apply>
    </target>

    <target name="start-hazelcast-server">
        <exec executable="tar" failonerror="true" dir="test/fixtures/hazelcast-server">
            <arg line="-xzf hazelcast-3.6.2.tar.gz"/>
        </exec>

        <exec executable="sh" failonerror="false" dir="test/fixtures/hazelcast-server/hazelcast-3.6.2/bin">
            <arg line="stop.sh"/>
        </exec>

        <exec executable="sh" failonerror="true" dir="test/fixtures/hazelcast-server/hazelcast-3.6.2/bin">
            <arg line="start.sh"/>
        </exec>

        <!-- wait until server is ready -->
        <sleep seconds="10"/>
    </target>

    <!-- cleanup -->
    <target name="clean">
        <delete dir="build"/>

        <delete dir="lib/googletest"/>
        <delete dir="lib/styleguide"/>
        <delete dir="lib/hazelcast-cpp-client"/>

        <delete dir="test/fixtures/hazelcast-server/hazelcast-3.6.2"/>
    </target>
</project>
